// Generated by CoffeeScript 1.4.0
(function() {
  var Manipulater, PICTURES_TO_DISPLAY_ON_BUTTON, Photos, domEditor, myPhotos,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Manipulater = (function() {

    function Manipulater() {}

    Manipulater.prototype.createTags = function(anArray, tagType, key, attr) {
      var n, results, _i, _len;
      results = "";
      for (_i = 0, _len = anArray.length; _i < _len; _i++) {
        n = anArray[_i];
        results += "<" + tagType + " " + attr + "=" + n[key] + " >";
      }
      return results;
    };

    Manipulater.prototype.injectInto = function(parentDiv, elements) {
      return $("" + parentDiv).append(elements);
    };

    return Manipulater;

  })();

  Photos = (function() {

    function Photos(source) {
      this.source = source;
      this.get = __bind(this.get, this);

      this.format = __bind(this.format, this);

    }

    Photos.prototype.imgLinksRetrieved = false;

    Photos.prototype.photoArray = [];

    Photos.prototype.format = function(data) {
      var imgLinksRetrieved, photo, post, _i, _j, _len, _len1, _ref, _ref1;
      _ref = data.posts;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        post = _ref[_i];
        if (post.type === "photo") {
          if (post.photos.length === 0) {
            this.photoArray.push({
              small: post["photo-url-250"],
              big: post["photo-url-1280"]
            });
          } else {
            _ref1 = post.photos;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              photo = _ref1[_j];
              this.photoArray.push({
                small: photo["photo-url-250"],
                big: photo["photo-url-1280"]
              });
            }
          }
        }
      }
      return imgLinksRetrieved = true;
    };

    Photos.prototype.get = function() {
      var _this = this;
      return $.ajax("http://" + this.source + "/api/read/json?num=50", {
        dataType: "jsonp",
        crossDomain: true,
        success: function(data) {
          return _this.format(data);
        },
        error: function() {
          return console.log("error");
        }
      });
    };

    return Photos;

  })();

  PICTURES_TO_DISPLAY_ON_BUTTON = 9;

  domEditor = new Manipulater();

  myPhotos = new Photos("wisechicken.tumblr.com");

  $.when(myPhotos.get()).done(function() {
    var imgTags;
    imgTags = domEditor.createTags(myPhotos.photoArray.slice(0, PICTURES_TO_DISPLAY_ON_BUTTON), "img", "small", "src");
    return domEditor.injectInto("#photoButton", imgTags);
  });

}).call(this);
